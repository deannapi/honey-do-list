{"version":3,"sources":["pages/Home.js","utils/auth.js","components/Header.js","components/Footer.js","utils/mutations.js","pages/Signup.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","LOGIN","gql","ADD_USER","Signup","props","useState","email","password","formState","setFormState","useMutation","addUser","handleFormSubmit","a","variables","firstName","lastName","mutationResponse","data","login","handleChange","target","name","value","onSubmit","htmlFor","placeholder","type","id","onChange","Login","error","console","log","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","component","Chores","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4fc9dd22.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Home() {\n    return (\n        <div className=\"home\">\n            \n        </div>\n    )\n};","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\n\nexport default function Header() {\n    const logout = event => {\n        event.preventDefault();\n        Auth.logout();\n    };\n    return (\n        <header className=\"\">\n            <div className=\"\">\n                <Link to=\"/\">\n                    <h1>Honey Do List</h1>\n                </Link>\n\n                <nav className=\"\">\n                    {Auth.loggedIn() ? (\n                        <>\n                            <a href=\"/\" onClick={logout}>Logout</a>\n                        </>\n                    ) : (\n                        <>\n                            <Link to=\"/login\">Login</Link>\n                            <Link to=\"/signup\">Signup</Link>\n                        </>\n                    )}\n                </nav>\n            </div>\n        </header>\n    );\n}; ","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer className=\"\">\n            <div className=\"\">\n                &copy;2020 Created By: Kiran Riaz, Christopher Short, DeAnna Martinez\n            </div>\n        </footer>\n    );\n};","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ‚Üê Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"must be at least 6 characters\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ‚Üê Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n// import { Provider } from \"react-redux\";\n\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Chores from \"./pages/Chores\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"\">\n          {/* <Provider> */}\n          <Header />\n          <div className=\"\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/chores\" component={Chores} />\n            </Switch>\n          </div>\n          <Footer />\n          {/* </Provider> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}